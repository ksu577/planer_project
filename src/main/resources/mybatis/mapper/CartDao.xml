<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.cart.dao.CartDao">

    <!-- 1. 장바구니 추가 -->
    <insert id="insertCart">
        insert into cart (cart_id, user_id, product_id, amount, product_amount)
        values (seq_cart.nextval, #{userId}, #{productId}, #{amount},
                (select product_amount
                 from product
                 where id = #{productId}))
    </insert>

    <!-- prodcut 수량 변경 -->
    <update id="setProductCnt">
        update PRODUCT
        set PRODUCT_AMOUNT = (PRODUCT_AMOUNT - #{amount})
        where ID = #{productId}
    </update>

    <!-- 장바구니 수정시 돌려주기 -->
    <update id="returnProductCnt">
        update PRODUCT
        set PRODUCT_AMOUNT = (PRODUCT_AMOUNT + #{amount})
        where ID = #{tempId}
    </update>


    <!-- 2. 장바구니 목록 -->
    <select id="cartList" resultType="com.study.cart.vo.CartVO">
        select c.cart_id        as  cart_id,
               c.user_id        as  user_id,
               p.id             as  product_id,
               p.name           as  product_name,
               m.name           as  user_name,
               c.amount         as  amount,
               p.price          as  price,
               p.product_amount as  product_amount,

               (p.price * c.amount) money
        from member m,
             product p,
             cart c
        where m.id = c.user_id
          and p.id = c.product_id
          and m.id = #{userId}
    </select>

    <!-- 3. 장바구니 삭제 -->
    <delete id="delete">
        DELETE
        From cart
        where cart_id = #{cartId}
    </delete>

    <delete id="clearCart">
        delete
        from cart
        where user_id = #{userId}
    </delete>

    <!-- 4. 장바구니 수정 -->
    <update id="modifyCart">
        update cart
        set amount = #{amount}
        where user_id = #{userId}
          and product_id = #{productId}
    </update>

    <!--5. 장바구니 금액 합계-->
    <select id="sumMoney" resultType="int">
        select NVL(SUM(p.price * c.amount), 0) money
        from cart c,
             product p
        where c.product_id = p.id
          and c.user_id = #{userId}
    </select>

    <!--6. 장바구니에 있는 것과 동일한 상품 코드 확인-->
    <select id="countCart" resultType="int">
        select count(*)
        from cart
        where user_id = #{userId}
          and product_id = #{product_id}
    </select>

    <!-- 7. 장바구니 상품수량 변경 -->
    <update id="updateCart">
        update cart
        set amount = #{amount}
        where user_id = #{userId}
          and product_id = #{productId}
    </update>

    <!--6. 장바구니에 있는 것과 동일한 상품 코드 확인-->
    <select id="getAmountInCart" resultType="int">
        SELECT NVL(
                       (SELECT amount
                        from cart
                        where user_id = #{userId}
                          and product_id = #{product_id}), 0)
        FROM DUAL
    </select>


    <!--    7. 장바구니에 있는 것에 대한 전체 수 확인?-->
    <select id="getProductAmountInCart" resultType="java.lang.Integer">
        SELECT NVL(
                       (SELECT product_amount
                        from cart
                        where user_id = #{userId}
                          and product_id = #{product_id}), 0)
        FROM DUAL
    </select>

    <select id="getAmountinProduct" resultType="java.lang.Integer">
        select product_amount
        from product
        where id = #{productId}
    </select>
</mapper>