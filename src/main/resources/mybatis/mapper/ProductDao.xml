<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.product.dao.ProductDao">

    <resultMap id="productMapper" type="com.study.product.vo.ProductVO">
        <result column="id" property="productId"/>
        <result column="name" property="productName"/>
        <result column="price" property="productPrice"/>
        <result column="product_desc" property="productDesc"/>
        <result column="img" property="img"/>
    </resultMap>


    <!-- 1. 물건 등록   -->
    <insert id="insertproduct">
        insert into product (id, name, price, product_desc, img)
        values (seq_cart.nextval, #{productName}, #{productPrice}, #{productDesc}, #{img})
    </insert>

    <!-- 2. 물건 삭제-->
    <delete id="delete">
        delete
        from product
        where id = #{productId}
    </delete>

    <!--3. 물건 변경-->
    <update id="update">
        update product
        set name         =#{productName}
          , price        =#{productPrice}
          , product_desc =#{productDesc}
          , img          = #{img}
        where id = #{productId}

    </update>

    <!-- 4. 물건 보기 (상세 페이지)   -->
    <select id="getproduct" parameterType="Integer" resultMap="productMapper">
        SELECT id,
               name,
               price,
               product_desc,
               img
        from product
        where id = #{productId}
    </select>

    <select id="getprodList" resultType="com.study.product.vo.ProductVO">
        select *
        from (select a.*, rownum AS rnum
              from (select id           as product_id,
                           name         as product_name,
                           price        as product_price,
                           product_desc as product_desc,
                           img          as img
                    from product
                    where 1=1
                    <include refid="searchInFree"/>
                    order by name) a)
        WHERE rnum between #{paging.firstRow} and #{paging.lastRow}
    </select>

    <select id="getTotalRowCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM product
        WHERE 1=1
        <include refid="searchInFree"/>
    </select>

    <sql id="searchInFree">
        <if test='!@org.apache.commons.lang3.StringUtils@isBlank(search.searchWord)'>
            <if test='search.searchType=="T"'>
                AND product_desc LIKE '%' || #{search.searchWord} || '%'
            </if>
            <if test='search.searchType=="W"'>
                AND  LIKE '%' || #{search.searchWord} || '%'
            </if>
            <if test='search.searchType=="C"'>
                AND name  LIKE '%' || #{search.searchWord} || '%'
            </if>
        </if>
    </sql>

    <insert id="insertSaveCart">
        INSERT INTO save_cart (user_id, save_num, take_name,
                               take_hp, take_mail, take_add,
                               take_detail_add, take_auto_add, take_req)
        VALUES ( #{userId}, SAVE_CART_SEQ.nextval, #{takeName}
               , #{takeHp}, #{takeMail}, #{takeAdd}
               , #{takeDetailAdd}, #{takeAutoAdd}, #{takeReq})
    </insert>

<!--    장바구니의 정보를 가져오려고함 근데 가장 최신에 생성된 장바구니여야되니까 save_num이 max값인걸 불러온거임 11월 23일-->
    <select id="selectuserInfo" resultType="com.study.product.vo.SaveCartVO">
        SELECT
            s.take_name,
            s.take_hp,
            s.take_mail,
            s.take_add,
            s.take_detail_add,
            s.take_auto_add,
            s.take_req
        FROM
            save_cart s, cart c
        WHERE
            s.USER_ID = #{id}
          AND
            s.user_id = c.user_id
          AND
            s.save_num = (select max(save_num) from save_cart where user_id = #{id})
    </select>

<!--    물품 정보의 db를 가져오려고함 위에꺼랑 이어 붙여서 afterpay에 넣으려고함 그 관련 컨트롤러는 productController에서 실행됨 11월 23일 -->
    <select id="selectproductInfo" resultType="com.study.product.vo.ProductVO">
        SELECT
            c.amount,
            p.name,
            p.price * c.amount as price
        FROM
            cart c, product p
        WHERE
            c.USER_ID = #{id}
          AND
            c.product_id = p.id;
    </select>

</mapper>