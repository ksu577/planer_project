<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.member.dao.IMemberDao">

    <sql id="searchInMember">
        <if test='!@org.apache.commons.lang3.StringUtils@isBlank(search.searchWord)'>
            <if test='search.searchType=="NAME"'>
                AND name LIKE '%' || #{search.searchWord} || '%'
            </if>
            <if test='search.searchType=="ID"'>
                AND id LIKE '%' || #{search.searchWord} || '%'
            </if>
        </if>
    </sql>


    <select id="getTotalRowCount" resultType="int">
        SELECT count(*)
        FROM member
        WHERE 1=1
        <include refid="searchInMember" />
    </select>


    <select id="getMemberList" resultType="com.study.member.vo.MemberVO">
        SELECT *
        FROM (SELECT a.*, rownum AS rnum
              FROM
                  (
              SELECT
                to_char(birth, 'YYYY-MM-DD') AS birth
                , to_char(createDate, 'YYYY-MM-DD') AS createDate
                , id
                , name
                , password
                , address
                , address2
                , phnum
                , email
                , delYn
                , role
                , profile
              FROM member a
              WHERE 1=1
              <include refid="searchInMember" />
              AND delYn != 'Y'
              ORDER BY id desc) a )
              WHERE rnum between #{paging.firstRow} and #{paging.lastRow}
    </select>


    <select id="getMember" resultType="com.study.member.vo.MemberVO" parameterType="String">
        SELECT
          id
        , name
        , password
        , address
        , address2
        , phnum
        , email
        , delYn
        , role
        , profile
        , to_char(birth, 'YYYY-MM-DD') AS birth
        , to_char(createDate, 'YYYY-MM-DD') AS createDate
        FROM member
        WHERE id = #{Id}
    </select>

    <select id="findId" resultType="com.study.member.vo.MemberVO">
        SELECT id
        FROM member
        WHERE name = #{name}
        AND email = #{email}
    </select>

    <select id="findPw" resultType="com.study.member.vo.MemberVO">
        SELECT password
        FROM member
        WHERE id = #{Id}
        AND email = #{email}
    </select>


    <update id="changePw" parameterType="com.study.member.vo.MemberVO">
        UPDATE member
        SET password = #{password}
        WHERE id = #{Id}
    </update>


    <update id="updateMember" parameterType="com.study.member.vo.MemberVO">
        UPDATE member
        SET
           name     = #{name}
          , password = #{password}
          , address  = #{address}
          , address2 = #{address2}
          , phnum    = #{phnum}
          , email    = #{email}
          , birth    = #{birth}
          , profile  = #{profile}
        WHERE id = #{Id}
    </update>


    <delete id="deleteMember" parameterType="String">
        UPDATE member
        SET delYn = 'Y'
        WHERE id = #{Id}
    </delete>


    <insert id="insertMember" parameterType="com.study.member.vo.MemberVO">
        INSERT INTO member (id,
                            name,
                            password,
                            address,
                            address2,
                            phnum,
                            email,
                            birth,
                            profile,
                            createDate,
                            delYn)
        VALUES (    #{Id},
                    #{name},
                    #{password},
                    #{address},
                    #{address2},
                    #{phnum},
                    #{email},
                    #{birth},
                    #{profile},
                    sysdate,
                    'N')
    </insert>
</mapper>
